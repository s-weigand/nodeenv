name: CI

on:
  push:
    branches:
    - master
  pull_request:

jobs:
  tests:
    name: Python ${{ matrix.python-version }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-20.04]
        python-version:
          - 2.7
          - 3.7
          - 3.8
          - 3.9
          - "3.10"
        include:
          - os: "windows-latest"
            python-version: 3.7
          - os: "macOS-latest"
            python-version: 3.7

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install --upgrade tox

    - name: Set tox env name
      id: set-tox-env-name
      shell: python
      run: |
        tox_env_name = "py{}".format("${{ matrix.python-version }}".replace(".", ""))
        print("::set-output name=tox-env-name::{}".format(tox_env_name))

    - name: Run tox targets for ${{ matrix.python-version }}
      run: |
        tox -e ${{ steps.set-tox-env-name.outputs.tox-env-name }}

    - name: Run tox targets for ${{ matrix.python-version }} windows with bash
      if: ${{ matrix.os == 'windows-latest' }}
      env:
        SHELL: bash
        TOX_TESTENV_PASSENV: SHELL
      shell: bash
      run: |
        tox -e ${{ steps.set-tox-env-name.outputs.tox-env-name }}

    - name: Upload coverage data
      if: ${{ matrix.os != 'windows-latest' }}
      uses: actions/upload-artifact@v2
      with:
        name: coverage-data
        path: '.coverage.*'

  coverage:
    name: Coverage
    runs-on: ubuntu-20.04
    needs: tests
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: python -m pip install --upgrade coverage[toml]

      - name: Download data
        uses: actions/download-artifact@v2
        with:
          name: coverage-data

      - name: Combine coverage and fail if it's <100%
        run: |
          python -m coverage combine
          python -m coverage html --skip-covered --skip-empty
          python -m coverage report --fail-under=54

      - name: Upload HTML report
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: html-report
          path: htmlcov
